5 INSERT QUERIES
-insert store
-insert product
-insert into manages
-insert into person
-insert into orders

At least 2 user actions that cause insertions spanning 3 or more tables.
-Create store
##################-Create product TO BE DONE

3 UPDATE QUERIES
-update store
-update product
##################-update user_info TO BE DONE

At least 2 user actions that cause updates spanning 2 or more tables.
-removefromcart
-updatefromcart
-update product

At least 3 DELETE queries
-delete store
-delete product

At least 1 delete query should initiate cascade delete.
-deleting store deletes all products inside it



--ADVANCED SQL
At least 5 such queries
-getStore with ID subquery
-getStoreProducts
-getCart
-getAllStores
-getStoresManagedByPerson


At least 2 queries should join 3 or more tables
-getAllStores
-getStoresManagedByPerson
-delivery status checking



--PLSQL see plsql_builder

4/3 triggers
-registration
-add store
-add product
-product purchase


5/3 procedures
-checkout
-delete person
-delete store
-delete product
-clear cart

3/2 functions
-check_credentials_function
-is_manager_of_product
-addtocart
-clearcart



--implement address

--implement complaints(done)
--implement announcements

--implement create categories
(suggestion by rubai: we will have only these hard coded categories: 
1. Electronics
2. Clothing and Apparel
3. Books
4. Home appliances
5. Groceries
... and totally up to maybe 10 categories
)
--implement adding multiple categories

--implement admin side
--implement log for procedures and functions for tracking


--
pagination: check corner case logics (example: when the page is empty, it shows page i of 0, should we keep it or it?)


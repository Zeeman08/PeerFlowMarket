CREATE TABLE LOCATION (
  LOCATION_ID SERIAL PRIMARY KEY,
  DIVISION TEXT NOT NULL,
  CITY TEXT NOT NULL
);

CREATE TABLE PERSON (
  PERSON_ID SERIAL PRIMARY KEY,
  PERSON_NAME TEXT NOT NULL,
  PASSWORD TEXT NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
  PHONE TEXT UNIQUE NOT NULL,
  EMAIL TEXT UNIQUE NOT NULL,
  IMAGE TEXT,
	TIME_OF_CREATION TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ADDRESS (
  ADDRESS_ID SERIAL PRIMARY KEY,
  PERSON_ID INTEGER,
  LOCATION_ID INTEGER,
  STREET_NAME TEXT NOT NULL,
  HOUSE_NUMBER TEXT NOT NULL,
  POST_CODE INTEGER NOT NULL,
  CONSTRAINT FK_PERSON
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
  CONSTRAINT FK_LOCATION
    FOREIGN KEY (LOCATION_ID)
      REFERENCES LOCATION(LOCATION_ID)
        ON DELETE SET NULL
);

CREATE TABLE CATEGORIES (
	CATEGORY_NAME TEXT PRIMARY KEY
);

CREATE TABLE STOREFRONT (
  STOREFRONT_ID SERIAL PRIMARY KEY,
  STOREFRONT_NAME TEXT NOT NULL,
  STOREFRONT_DESCRIPTION TEXT,
  LAST_UPDATED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  IMAGE TEXT
);

CREATE TABLE CATEGORY_ASSIGNMENT (
	STOREFRONT_ID INTEGER, 
	CATEGORY_NAME TEXT, 
	CONSTRAINT PK_STOREFRONT_RELATION
		PRIMARY KEY(STOREFRONT_ID, CATEGORY_NAME),
  CONSTRAINT FK_STOREFRONT
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE,
  CONSTRAINT FK_CATEGORY
    FOREIGN KEY (CATEGORY_NAME)
      REFERENCES CATEGORIES(CATEGORY_NAME)
        ON DELETE CASCADE
);

CREATE TABLE MANAGES (
	PERSON_ID INTEGER,
	STOREFRONT_ID INTEGER,
  CONSTRAINT PK_MANAGES
    PRIMARY KEY (PERSON_ID, STOREFRONT_ID),
  CONSTRAINT FK_MANAGER
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
	CONSTRAINT FK_MANAGEE
		FOREIGN KEY (STOREFRONT_ID)
			REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE CASCADE
);

CREATE TABLE PRODUCT (
  PRODUCT_ID SERIAL PRIMARY KEY,
  STOREFRONT_ID INTEGER,
  PRODUCT_NAME TEXT NOT NULL,
  PRODUCT_DESCRIPTION TEXT NOT NULL,
  LAUNCH_DATE DATE DEFAULT CURRENT_DATE,
  PRICE REAL NOT NULL,
  IMAGE TEXT,
  CONSTRAINT FK_STOREFRONT
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE
);

CREATE TABLE CART (
  PERSON_ID INTEGER,
  PRODUCT_ID INTEGER,
  QUANTITY INTEGER NOT NULL,
  CONSTRAINT PK_CART
    PRIMARY KEY (PERSON_ID, PRODUCT_ID),
  CONSTRAINT FK_PARENT
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
  CONSTRAINT FK_CONTAINS
    FOREIGN KEY (PRODUCT_ID)
      REFERENCES PRODUCT(PRODUCT_ID)
        ON DELETE CASCADE
);

CREATE TABLE TRANSACTIONS (
  TRANSACTION_ID SERIAL PRIMARY KEY,
  PERSON_ID INTEGER,
  STOREFRONT_ID INTEGER,
  AMOUNT REAL NOT NULL,
  TRANSACTION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_CUSTOMER
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
				ON DELETE SET NULL,
  CONSTRAINT FK_STORE
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE SET NULL
);

CREATE TABLE ORDERS (
  ORDER_ID SERIAL PRIMARY KEY,
  PRODUCT_ID INTEGER,
  PERSON_ID INTEGER,
  TRANSACTION_ID INTEGER,
  ORDER_DATE DATE DEFAULT CURRENT_DATE,
  CONSTRAINT FK_BUYER
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
				ON DELETE SET NULL,
  CONSTRAINT FK_PRODUCT
    FOREIGN KEY (PRODUCT_ID)
      REFERENCES PRODUCT(PRODUCT_ID)
        ON DELETE SET NULL,
  CONSTRAINT FK_TRANSACTION
    FOREIGN KEY (TRANSACTION_ID)
      REFERENCES TRANSACTIONS(TRANSACTION_ID)
        ON DELETE SET NULL
);

CREATE TABLE ANNOUNCEMENTS (
	ANNOUNCEMENT_ID SERIAL PRIMARY KEY,
	STOREFRONT_ID INTEGER,
	ANNOUNCEMENT_DESCRIPTION TEXT NOT NULL,
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  IMAGE TEXT,
  CONSTRAINT FK_ANNOUNCEMENT_STOREFRONT_ID
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE
);

CREATE TABLE REVIEW (
	REVIEW_ID SERIAL PRIMARY KEY, 
	PRODUCT_ID INTEGER, 
	PERSON_ID INTEGER, 
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	COMMENTS TEXT,
	RATING REAL NOT NULL,
	 CONSTRAINT FK_REVIEW_PERSON
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
	CONSTRAINT FK_REVIEW_PRODUCT
		FOREIGN KEY (PRODUCT_ID)
			REFERENCES PRODUCT(PRODUCT_ID)
				ON DELETE CASCADE
);

CREATE TABLE COMPLAINTS (
	COMPLAINT_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER,
	STOREFRONT_ID INTEGER,
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	COMPLAINT_DETAILS TEXT,
	CONSTRAINT FK_BY
		FOREIGN KEY (PERSON_ID)
			REFERENCES PERSON(PERSON_ID)
				ON DELETE CASCADE,
	CONSTRAINT FK_AGAINST
		FOREIGN KEY (STOREFRONT_ID)
			REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE CASCADE
);

CREATE TABLE TAGS (
	TAG_NAME TEXT,
  STOREFRONT_ID INTEGER,
  CONSTRAINT PK_TAG_IDENTITY
    PRIMARY KEY (TAG_NAME, STOREFRONT_ID),
  CONSTRAINT FK_BELONGS_TO_STORE
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE
);

CREATE TABLE TAG_ASSIGNMENT (
	PRODUCT_ID INTEGER, 
	TAG_NAME TEXT, 
	CONSTRAINT PK_PRODUCT_RELATION
		PRIMARY KEY(PRODUCT_ID, TAG_NAME),
	CONSTRAINT FK_PRODUCT
		FOREIGN KEY (PRODUCT_ID)
			REFERENCES PRODUCT(PRODUCT_ID)
				ON DELETE CASCADE,
	CONSTRAINT FK_TAG
		FOREIGN KEY(TAG_NAME)
			REFERENCES TAGS(TAG_NAME)
				ON DELETE CASCADE
);
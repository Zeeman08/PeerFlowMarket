CREATE TABLE COUNTRY (
  COUNTRY_ID SERIAL PRIMARY KEY,
  COUNTRY_NAME TEXT NOT NULL CHECK (LENGTH(COUNTRY_NAME) <= 40)
);


CREATE TABLE LOCATION (
  LOCATION_ID SERIAL PRIMARY KEY,
  LOCATION_NAME TEXT NOT NULL CHECK (LENGTH(LOCATION_NAME) <= 40),
  POST_CODE INTEGER NOT NULL,
  COUNTRY_ID INTEGER,
	CONSTRAINT FK_LOCATION_COUNTRY_ID
    FOREIGN KEY (COUNTRY_ID)
      REFERENCES COUNTRY(COUNTRY_ID)
        ON DELETE CASCADE
);
CREATE TABLE PERSON (
  PERSON_ID SERIAL PRIMARY KEY,
  PERSON_NAME TEXT NOT NULL,
  PASSWORD TEXT NOT NULL,
  LOCATION_ID INTEGER NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
  PHONE TEXT UNIQUE NOT NULL,
  EMAIL TEXT UNIQUE NOT NULL,
  IMAGE TEXT,
	TIME_OF_CREATION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT FK_LOCATION
    FOREIGN KEY (LOCATION_ID)
      REFERENCES LOCATION(LOCATION_ID)
        ON DELETE SET NULL
);
CREATE TABLE CATEGORIES (
	CATEGORY_NAME TEXT PRIMARY KEY
);
CREATE TABLE STOREFRONT (
  STOREFRONT_ID SERIAL PRIMARY KEY,
  STOREFRONT_NAME TEXT NOT NULL,
  STOREFRONT_DESCRIPTION TEXT,
  LAST_UPDATED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  IMAGE TEXT
);
CREATE TABLE CATEGORY_STOREFRONT_RELATION (
	STOREFRONT_ID INTEGER NOT NULL, 
	CATEGORY_NAME TEXT NOT NULL, 
	CONSTRAINT PK
		PRIMARY KEY(STOREFRONT_ID, CATEGORY_NAME)
);

CREATE TABLE MANAGES (
  MANAGES_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER,
	STOREFRONT_ID INTEGER,
  CONSTRAINT FK_MANAGER
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
	CONSTRAINT FK_MANAGEE
		FOREIGN KEY (STOREFRONT_ID)
			REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE CASCADE
);


CREATE INDEX Key_storefront ON STOREFRONT ( LAST_UPDATED_ON);

CREATE TABLE PRODUCT (
  PRODUCT_ID SERIAL PRIMARY KEY,
  PRODUCT_NAME TEXT NOT NULL,
  PRODUCT_DESCRIPTION TEXT NOT NULL,
  PRICE REAL NOT NULL,
  IMAGE TEXT,
  STOREFRONT_ID INTEGER,
  CONSTRAINT FK_PRODUCT_STOREFRONT_ID
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE
);

CREATE INDEX Key_prodcut ON PRODUCT (PRODUCT_NAME, PRICE, IMAGE);	
CREATE TABLE CART (
  PERSON_ID INTEGER,
  PRODUCT_ID INTEGER,
  QUANTITY INTEGER DEFAULT 1, -- Assuming a default quantity of 1
  CONSTRAINT PK_CART
    PRIMARY KEY (PERSON_ID, PRODUCT_ID),
  CONSTRAINT FK_PARENT
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE CASCADE,
  CONSTRAINT FK_CONTAINS
    FOREIGN KEY (PRODUCT_ID)
      REFERENCES PRODUCT(PRODUCT_ID)
        ON DELETE CASCADE
);

CREATE TABLE ORDERS (
  ORDER_ID SERIAL PRIMARY KEY,
  PERSON_ID INTEGER,
  ORDER_DATE DATE DEFAULT CURRENT_DATE,
  COMMENTS TEXT,
  CONSTRAINT FK_PARENT
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
				ON DELETE SET NULL
);
--notice on delete set null
CREATE TABLE TRANSACTIONS (
  TRANSACTION_ID SERIAL PRIMARY KEY,
  PERSON_ID INTEGER,
  STOREFRONT_ID INTEGER,
  ORDER_ID INTEGER,
  TRANSACTION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_CUSTOMER
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
				ON DELETE SET NULL,
  CONSTRAINT FK_STORE
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE SET NULL,
  CONSTRAINT FK_ORDER
    FOREIGN KEY (ORDER_ID)
     REFERENCES ORDERS(ORDER_ID)
);

CREATE TABLE ANNOUNCEMENTS (
	ANNOUNCEMENT_ID SERIAL PRIMARY KEY,
	STOREFRONT_ID INTEGER,
	ANNOUNCEMENT_DESCRIPTION TEXT NOT NULL,
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  IMAGE TEXT,
  CONSTRAINT FK_ANNOUNCEMENT_STOREFRONT_ID
    FOREIGN KEY (STOREFRONT_ID)
      REFERENCES STOREFRONT(STOREFRONT_ID)
        ON DELETE CASCADE
);
CREATE TABLE REVIEW (
	REVIEW_ID SERIAL PRIMARY KEY, 
	PRODUCT_ID INTEGER, 
	PERSON_ID INTEGER, 
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	COMMENTS TEXT,
	RATING REAL NOT NULL,
	 CONSTRAINT FK_REVIEW_PERSON
    FOREIGN KEY (PERSON_ID)
      REFERENCES PERSON(PERSON_ID)
        ON DELETE SET NULL,
	CONSTRAINT FK_REVIEW_PRODUCT
		FOREIGN KEY (PRODUCT_ID)
			REFERENCES PRODUCT(PRODUCT_ID)
				ON DELETE CASCADE
);
CREATE TABLE COMPLAINTS (
	COMPLAINT_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER,
	STOREFRONT_ID INTEGER,
	POSTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	COMPLAINT_DETAILS TEXT,
	CONSTRAINT FK_PERSON
		FOREIGN KEY (PERSON_ID)
			REFERENCES PERSON(PERSON_ID)
				ON DELETE SET NULL,
	CONSTRAINT FK_STOREFRONT_ID
		FOREIGN KEY (STOREFRONT_ID)
			REFERENCES STOREFRONT(STOREFRONT_ID)
				ON DELETE SET NULL
);
CREATE TABLE TAGS (
	TAG_NAME TEXT PRIMARY KEY
);
CREATE TABLE TAG_ASSIGNMENT(
	ENTRY_ID SERIAL PRIMARY KEY,
	PRODUCT_ID INTEGER, 
	TAG_NAME TEXT,
	CONSTRAINT FK_PRODUCT
		FOREIGN KEY (PRODUCT_ID)
			REFERENCES PRODUCT(PRODUCT_ID)
				ON DELETE CASCADE,
	CONSTRAINT FK_TAG
		FOREIGN KEY(TAG_NAME)
			REFERENCES TAGS(TAG_NAME)
				ON DELETE CASCADE
);
CREATE INDEX Key_announcement ON ANNOUNCEMENTS (POSTED_ON);	







